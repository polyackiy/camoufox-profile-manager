#!/usr/bin/env python3
"""
–£–ª—É—á—à–µ–Ω–Ω–∞—è —É—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ –∫—É–∫–æ–≤ –º–µ–∂–¥—É Chrome –∏ Camoufox
–£—á–∏—Ç—ã–≤–∞–µ—Ç —Ä–∞–∑–ª–∏—á–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–∞—Ö –¥–æ–º–µ–Ω–æ–≤ –∏ –¥—Ä—É–≥–∏–µ –Ω—é–∞–Ω—Å—ã
"""

import asyncio
import sqlite3
import json
import os
from pathlib import Path
from typing import Dict, List, Any, Optional
from datetime import datetime
import argparse

from core.chrome_cookie_decryptor import ChromeCookieDecryptor
from loguru import logger


class AdvancedCookieMigrationChecker:
    """–£–ª—É—á—à–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ –∫—É–∫–æ–≤"""
    
    def __init__(self):
        self.chrome_decryptor = ChromeCookieDecryptor()
        
    def normalize_domain(self, domain: str) -> str:
        """–ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞—Ç—å –¥–æ–º–µ–Ω –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è (—É–±—Ä–∞—Ç—å/–¥–æ–±–∞–≤–∏—Ç—å —Ç–æ—á–∫—É)"""
        if not domain:
            return ""
        
        # –£–±–∏—Ä–∞–µ–º —Ç–æ—á–∫—É –≤ –Ω–∞—á–∞–ª–µ –¥–ª—è —É–Ω–∏—Ñ–∏–∫–∞—Ü–∏–∏
        if domain.startswith('.'):
            return domain[1:]
        return domain
    
    def get_chrome_cookies(self, chrome_profile_path: str) -> List[Dict[str, Any]]:
        """–ü–æ–ª—É—á–∏—Ç—å –∫—É–∫–∏ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è Chrome"""
        logger.info(f"üîç –ß–∏—Ç–∞–µ–º –∫—É–∫–∏ –∏–∑ Chrome –ø—Ä–æ—Ñ–∏–ª—è: {chrome_profile_path}")
        
        try:
            cookies = self.chrome_decryptor.get_decrypted_chrome_cookies(chrome_profile_path)
            
            if cookies:
                logger.success(f"‚úÖ –ò–∑–≤–ª–µ—á–µ–Ω–æ {len(cookies)} –∫—É–∫–æ–≤ –∏–∑ Chrome")
                return cookies
            else:
                logger.warning("‚ö†Ô∏è –ö—É–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å")
                return []
                
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –∫—É–∫–æ–≤ –∏–∑ Chrome: {e}")
            return []
    
    def get_camoufox_cookies(self, profile_id: str) -> List[Dict[str, Any]]:
        """–ü–æ–ª—É—á–∏—Ç—å –∫—É–∫–∏ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è Camoufox"""
        logger.info(f"üîç –ß–∏—Ç–∞–µ–º –∫—É–∫–∏ –∏–∑ Camoufox –ø—Ä–æ—Ñ–∏–ª—è: {profile_id}")
        
        cookies_db_path = f"data/profiles/profile_{profile_id}/cookies.sqlite"
        if not os.path.exists(cookies_db_path):
            logger.error(f"‚ùå –§–∞–π–ª –∫—É–∫–æ–≤ Camoufox –Ω–µ –Ω–∞–π–¥–µ–Ω: {cookies_db_path}")
            return []
        
        try:
            conn = sqlite3.connect(cookies_db_path)
            cursor = conn.cursor()
            
            cursor.execute("""
                SELECT name, value, host, path, expiry, isSecure, isHttpOnly, sameSite
                FROM moz_cookies
            """)
            
            cookies = []
            for row in cursor.fetchall():
                cookie = {
                    'name': row[0],
                    'value': row[1],
                    'domain': row[2],
                    'path': row[3],
                    'expires': row[4] if row[4] else None,
                    'secure': bool(row[5]),
                    'httponly': bool(row[6]),
                    'samesite': row[7] if row[7] else 'unspecified'
                }
                cookies.append(cookie)
            
            conn.close()
            logger.success(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(cookies)} –∫—É–∫–æ–≤ –≤ Camoufox")
            return cookies
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∫—É–∫–æ–≤ –∏–∑ Camoufox: {e}")
            return []
    
    def normalize_chrome_cookies(self, chrome_cookies: List[Dict]) -> List[Dict]:
        """–ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫—É–∫–æ–≤ Chrome"""
        normalized = []
        for cookie in chrome_cookies:
            normalized_cookie = {
                'name': cookie.get('name', ''),
                'value': cookie.get('value', ''),
                'domain': self.normalize_domain(cookie.get('host_key', '')),
                'path': cookie.get('path', '/'),
                'expires': cookie.get('expires_utc'),
                'secure': cookie.get('is_secure', False),
                'httponly': cookie.get('is_httponly', False),
                'samesite': cookie.get('samesite', 0)
            }
            normalized.append(normalized_cookie)
        return normalized
    
    def normalize_camoufox_cookies(self, camoufox_cookies: List[Dict]) -> List[Dict]:
        """–ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫—É–∫–æ–≤ Camoufox"""
        normalized = []
        for cookie in camoufox_cookies:
            normalized_cookie = {
                'name': cookie.get('name', ''),
                'value': cookie.get('value', ''),
                'domain': self.normalize_domain(cookie.get('domain', '')),
                'path': cookie.get('path', '/'),
                'expires': cookie.get('expires'),
                'secure': cookie.get('secure', False),
                'httponly': cookie.get('httponly', False),
                'samesite': cookie.get('samesite', 'unspecified')
            }
            normalized.append(normalized_cookie)
        return normalized
    
    def compare_cookies_advanced(self, chrome_cookies: List[Dict], camoufox_cookies: List[Dict]) -> Dict[str, Any]:
        """–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –∫—É–∫–æ–≤ —Å —É—á–µ—Ç–æ–º –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–æ–º–µ–Ω–æ–≤"""
        logger.info("üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –∫—É–∫–æ–≤...")
        
        chrome_normalized = self.normalize_chrome_cookies(chrome_cookies)
        camoufox_normalized = self.normalize_camoufox_cookies(camoufox_cookies)
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –ø–æ–∏—Å–∫–∞
        chrome_index = {f"{c['domain']}:{c['name']}": c for c in chrome_normalized}
        camoufox_index = {f"{c['domain']}:{c['name']}": c for c in camoufox_normalized}
        
        results = {
            'total_chrome': len(chrome_normalized),
            'total_camoufox': len(camoufox_normalized),
            'exact_matches': 0,
            'value_matches': 0,
            'missing_in_camoufox': [],
            'extra_in_camoufox': [],
            'value_mismatches': [],
            'attribute_mismatches': [],
            'domain_format_differences': []
        }
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫—É–∫–∏ –∏–∑ Chrome
        for key, chrome_cookie in chrome_index.items():
            if key in camoufox_index:
                camoufox_cookie = camoufox_index[key]
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π
                if chrome_cookie['value'] == camoufox_cookie['value']:
                    results['exact_matches'] += 1
                    results['value_matches'] += 1
                else:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ (–≤–æ–∑–º–æ–∂–Ω–æ, —Ä–∞–∑–Ω—ã–µ –∫–æ–¥–∏—Ä–æ–≤–∫–∏)
                    if self.values_similar(chrome_cookie['value'], camoufox_cookie['value']):
                        results['value_matches'] += 1
                    else:
                        results['value_mismatches'].append({
                            'domain': chrome_cookie['domain'],
                            'name': chrome_cookie['name'],
                            'chrome_value_preview': self.preview_value(chrome_cookie['value']),
                            'camoufox_value_preview': self.preview_value(camoufox_cookie['value'])
                        })
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ç—Ä–∏–±—É—Ç—ã
                attr_diffs = self.compare_cookie_attributes(chrome_cookie, camoufox_cookie)
                if attr_diffs:
                    results['attribute_mismatches'].append({
                        'domain': chrome_cookie['domain'],
                        'name': chrome_cookie['name'],
                        'differences': attr_diffs
                    })
            else:
                results['missing_in_camoufox'].append({
                    'domain': chrome_cookie['domain'],
                    'name': chrome_cookie['name'],
                    'value_preview': self.preview_value(chrome_cookie['value'])
                })
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏—à–Ω–∏–µ –∫—É–∫–∏ –≤ Camoufox
        for key, camoufox_cookie in camoufox_index.items():
            if key not in chrome_index:
                results['extra_in_camoufox'].append({
                    'domain': camoufox_cookie['domain'],
                    'name': camoufox_cookie['name'],
                    'value_preview': self.preview_value(camoufox_cookie['value'])
                })
        
        return results
    
    def values_similar(self, value1: str, value2: str) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –ø–æ—Ö–æ–∂–∏ –ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è –∫—É–∫–æ–≤ (—É—á–∏—Ç—ã–≤–∞–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ä–∞–∑–ª–∏—á–∏—è –≤ –∫–æ–¥–∏—Ä–æ–≤–∫–µ)"""
        if not value1 or not value2:
            return False
        
        # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —á–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
        if len(value1) == len(value2):
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–µ –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã
            if value1[:10] == value2[:10] and value1[-10:] == value2[-10:]:
                return True
        
        return False
    
    def preview_value(self, value: str, max_len: int = 30) -> str:
        """–°–æ–∑–¥–∞—Ç—å –ø—Ä–µ–≤—å—é –∑–Ω–∞—á–µ–Ω–∏—è –∫—É–∫–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        if not value:
            return ""
        
        if len(value) <= max_len:
            return value
        
        return value[:max_len] + "..."
    
    def compare_cookie_attributes(self, chrome_cookie: Dict, camoufox_cookie: Dict) -> List[str]:
        """–°—Ä–∞–≤–Ω–∏—Ç—å –∞—Ç—Ä–∏–±—É—Ç—ã –∫—É–∫–æ–≤"""
        differences = []
        
        if chrome_cookie.get('secure', False) != camoufox_cookie.get('secure', False):
            differences.append('secure')
        
        if chrome_cookie.get('httponly', False) != camoufox_cookie.get('httponly', False):
            differences.append('httponly')
        
        if chrome_cookie.get('path', '/') != camoufox_cookie.get('path', '/'):
            differences.append('path')
        
        return differences
    
    def print_advanced_report(self, results: Dict[str, Any]):
        """–í—ã–≤–µ—Å—Ç–∏ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –æ—Ç—á–µ—Ç –æ —Å—Ä–∞–≤–Ω–µ–Ω–∏–∏ –∫—É–∫–æ–≤"""
        logger.info("üìä –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –æ—Ç—á–µ—Ç –æ –º–∏–≥—Ä–∞—Ü–∏–∏ –∫—É–∫–æ–≤:")
        logger.info(f"Chrome –∫—É–∫–æ–≤: {results['total_chrome']}")
        logger.info(f"Camoufox –∫—É–∫–æ–≤: {results['total_camoufox']}")
        logger.info(f"–¢–æ—á–Ω—ã—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π: {results['exact_matches']}")
        logger.info(f"–°–æ–≤–ø–∞–¥–µ–Ω–∏–π –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é: {results['value_matches']}")
        
        # –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç—ã
        if results['total_chrome'] > 0:
            exact_rate = (results['exact_matches'] / results['total_chrome']) * 100
            value_rate = (results['value_matches'] / results['total_chrome']) * 100
            logger.info(f"üìà –¢–æ—á–Ω—ã—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π: {exact_rate:.1f}%")
            logger.info(f"üìà –°–æ–≤–ø–∞–¥–µ–Ω–∏–π –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é: {value_rate:.1f}%")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–±–ª–µ–º—ã
        if results['missing_in_camoufox']:
            logger.warning(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ Camoufox ({len(results['missing_in_camoufox'])}):")
            for cookie in results['missing_in_camoufox'][:5]:
                logger.warning(f"  - {cookie['domain']} | {cookie['name']} = {cookie['value_preview']}")
            if len(results['missing_in_camoufox']) > 5:
                logger.warning(f"  ... –∏ –µ—â–µ {len(results['missing_in_camoufox']) - 5}")
        
        if results['value_mismatches']:
            logger.error(f"‚ö†Ô∏è –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π ({len(results['value_mismatches'])}):")
            for mismatch in results['value_mismatches'][:3]:
                logger.error(f"  ! {mismatch['domain']} | {mismatch['name']}")
                logger.error(f"    Chrome:   {mismatch['chrome_value_preview']}")
                logger.error(f"    Camoufox: {mismatch['camoufox_value_preview']}")
        
        # –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞
        if results['value_matches'] == results['total_chrome']:
            logger.success("üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∫—É–∫–æ–≤ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!")
        elif results['value_matches'] >= results['total_chrome'] * 0.9:
            logger.info("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∫—É–∫–æ–≤ –ø—Ä–æ—à–ª–∞ —Ö–æ—Ä–æ—à–æ (>90%)")
        elif results['value_matches'] >= results['total_chrome'] * 0.7:
            logger.warning("‚ö†Ô∏è –ú–∏–≥—Ä–∞—Ü–∏—è –∫—É–∫–æ–≤ –ø—Ä–æ—à–ª–∞ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ (>70%)")
        else:
            logger.error("‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –∫—É–∫–æ–≤ —Ç—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è (<70%)")
    
    def test_specific_cookies(self, chrome_cookies: List[Dict], camoufox_cookies: List[Dict], test_domains: List[str]):
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∫—É–∫–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤"""
        logger.info(f"üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫—É–∫–∏ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –¥–æ–º–µ–Ω–æ–≤: {', '.join(test_domains)}")
        
        chrome_normalized = self.normalize_chrome_cookies(chrome_cookies)
        camoufox_normalized = self.normalize_camoufox_cookies(camoufox_cookies)
        
        for domain in test_domains:
            logger.info(f"\nüéØ –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–º–µ–Ω: {domain}")
            
            chrome_domain_cookies = [c for c in chrome_normalized if domain in c['domain']]
            camoufox_domain_cookies = [c for c in camoufox_normalized if domain in c['domain']]
            
            if not chrome_domain_cookies:
                logger.info(f"  ‚ÑπÔ∏è –ù–µ—Ç –∫—É–∫–æ–≤ –¥–ª—è {domain} –≤ Chrome")
                continue
            
            if not camoufox_domain_cookies:
                logger.error(f"  ‚ùå –ö—É–∫–∏ –¥–ª—è {domain} –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ Camoufox!")
                continue
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –∫—É–∫
            chrome_index = {c['name']: c for c in chrome_domain_cookies}
            camoufox_index = {c['name']: c for c in camoufox_domain_cookies}
            
            matches = 0
            for name, chrome_cookie in chrome_index.items():
                if name in camoufox_index:
                    camoufox_cookie = camoufox_index[name]
                    if chrome_cookie['value'] == camoufox_cookie['value']:
                        matches += 1
                        logger.success(f"  ‚úÖ {name}: –ó–Ω–∞—á–µ–Ω–∏—è —Å–æ–≤–ø–∞–¥–∞—é—Ç")
                    else:
                        logger.warning(f"  ‚ö†Ô∏è {name}: –ó–Ω–∞—á–µ–Ω–∏—è —Ä–∞–∑–ª–∏—á–∞—é—Ç—Å—è")
                else:
                    logger.error(f"  ‚ùå {name}: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ Camoufox")
            
            success_rate = (matches / len(chrome_domain_cookies)) * 100 if chrome_domain_cookies else 0
            logger.info(f"  üìä –£—Å–ø–µ—à–Ω–æ—Å—Ç—å –¥–ª—è {domain}: {success_rate:.1f}% ({matches}/{len(chrome_domain_cookies)})")


async def main():
    parser = argparse.ArgumentParser(description='–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ –∫—É–∫–æ–≤')
    parser.add_argument('--chrome-profile', required=True, help='–ü—É—Ç—å –∫ –ø—Ä–æ—Ñ–∏–ª—é Chrome')
    parser.add_argument('--camoufox-profile', required=True, help='ID –ø—Ä–æ—Ñ–∏–ª—è Camoufox')
    parser.add_argument('--test-domains', help='–î–æ–º–µ–Ω—ã –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)')
    parser.add_argument('--save-report', help='–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç—á–µ—Ç –≤ —Ñ–∞–π–ª')
    
    args = parser.parse_args()
    
    checker = AdvancedCookieMigrationChecker()
    
    # –ü–æ–ª—É—á–∞–µ–º –∫—É–∫–∏
    chrome_cookies = checker.get_chrome_cookies(args.chrome_profile)
    camoufox_cookies = checker.get_camoufox_cookies(args.camoufox_profile)
    
    if not chrome_cookies and not camoufox_cookies:
        logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫—É–∫–∏ –Ω–∏ –∏–∑ –æ–¥–Ω–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞")
        return
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ
    results = checker.compare_cookies_advanced(chrome_cookies, camoufox_cookies)
    checker.print_advanced_report(results)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–æ–º–µ–Ω—ã
    if args.test_domains:
        domains = [d.strip() for d in args.test_domains.split(',')]
        checker.test_specific_cookies(chrome_cookies, camoufox_cookies, domains)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç
    if args.save_report:
        report_data = {
            'timestamp': datetime.now().isoformat(),
            'chrome_profile': args.chrome_profile,
            'camoufox_profile': args.camoufox_profile,
            'results': results
        }
        
        with open(args.save_report, 'w', encoding='utf-8') as f:
            json.dump(report_data, f, ensure_ascii=False, indent=2)
        
        logger.success(f"üìÑ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {args.save_report}")


if __name__ == "__main__":
    asyncio.run(main()) 